///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : servicecreator.h
/// SOFTWARE COMPONENT NAME           : ServiceCreator
/// GENERATED DATE                    : 2024-10-17 15:32:20
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "servicecreator/aa/port/pport_bcm_wiperwash.h"
#include "servicecreator/aa/port/pport_bmsinfosrv.h"
#include "servicecreator/aa/port/pport_ctrl_moodlamp.h"
#include "servicecreator/aa/port/pport_ctrl_rearcurtain.h"
#include "servicecreator/aa/port/pport_dms_func.h"
#include "servicecreator/aa/port/pport_msginfosrv.h"
#include "servicecreator/aa/port/pport_servicemanagement.h"
#include "servicecreator/aa/port/pport_smartfilmcont.h"
#include "servicecreator/aa/port/pport_snsr_facedetectmodule.h"
#include "servicecreator/aa/port/pport_snsr_heartbeat.h"
#include "servicecreator/aa/port/pport_snsr_uss.h"
#include "servicecreator/aa/port/pport_tms_ac.h"
#include "servicecreator/aa/port/pport_tms_envmonitor.h"
#include "servicecreator/aa/port/pport_tms_fragrance.h"
#include "servicecreator/aa/port/pport_tms_purifier.h"
#include "servicecreator/aa/port/pport_tms_ventilation.h"
#include "servicecreator/aa/port/pport_vcs_accrpedal.h"
#include "servicecreator/aa/port/pport_vcs_brake.h"
#include "servicecreator/aa/port/pport_vcs_brakepedal.h"
#include "servicecreator/aa/port/pport_vcs_epb.h"
#include "servicecreator/aa/port/pport_vcs_gear.h"
#include "servicecreator/aa/port/pport_vcs_vehspd.h"
#include "servicecreator/aa/port/rport_bcm_horn.h"
#include "servicecreator/aa/port/rport_bcm_wiperwash.h"
#include "servicecreator/aa/port/rport_ctrl_moodlamp.h"
#include "servicecreator/aa/port/rport_ctrl_rearcurtain.h"
#include "servicecreator/aa/port/rport_eevpcontrolsoamlm.h"
#include "servicecreator/aa/port/rport_smartfilmcont.h"
#include "servicecreator/aa/port/rport_snsr_facedetectmodule.h"
#include "servicecreator/aa/port/rport_tms_ac.h"
#include "servicecreator/aa/port/rport_tms_envmonitor.h"
#include "servicecreator/aa/port/rport_tms_fragrance.h"
#include "servicecreator/aa/port/rport_tms_purifier.h"
#include "servicecreator/aa/port/rport_tms_ventilation.h"
#include "servicecreator/aa/port/rport_vcs_brake.h"
#include "servicecreator/aa/port/rport_vcs_gear.h"
#include "servicecreator/aa/port/rport_vcs_tqdmd.h"
 
#include "para/swc/port_pool.h"
 
namespace servicecreator
{
namespace aa
{
 
class ServiceCreator
{
public:
    /// @brief Constructor
    ServiceCreator();
    
    /// @brief Destructor
    ~ServiceCreator();
    
    /// @brief Initialize software component
    bool Initialize();
    
    /// @brief Start software component
    void Start();
    
    /// @brief Terminate software component
    void Terminate();
 
private:
    /// @brief Run software component
    void Run();
 
private:
    /// @brief Pool of port
    para::swc::PortPool m_workers;
    
    /// @brief Logger for software component
    ara::log::Logger& m_logger;
    
    /// @brief Instance of Port {ServiceCreator.PPort_BCM_WiperWash}
    std::shared_ptr<servicecreator::aa::port::PPort_BCM_WiperWash> m_PPort_BCM_WiperWash;
    
    /// @brief Instance of Port {ServiceCreator.PPort_BmsInfoSrv}
    std::shared_ptr<servicecreator::aa::port::PPort_BmsInfoSrv> m_PPort_BmsInfoSrv;
    
    /// @brief Instance of Port {ServiceCreator.PPort_Ctrl_MoodLamp}
    std::shared_ptr<servicecreator::aa::port::PPort_Ctrl_MoodLamp> m_PPort_Ctrl_MoodLamp;
    
    /// @brief Instance of Port {ServiceCreator.PPort_Ctrl_RearCurtain}
    std::shared_ptr<servicecreator::aa::port::PPort_Ctrl_RearCurtain> m_PPort_Ctrl_RearCurtain;
    
    /// @brief Instance of Port {ServiceCreator.PPort_DMS_Func}
    std::shared_ptr<servicecreator::aa::port::PPort_DMS_Func> m_PPort_DMS_Func;
    
    /// @brief Instance of Port {ServiceCreator.PPort_MsgInfoSrv}
    std::shared_ptr<servicecreator::aa::port::PPort_MsgInfoSrv> m_PPort_MsgInfoSrv;
    
    /// @brief Instance of Port {ServiceCreator.PPort_ServiceManagement}
    std::shared_ptr<servicecreator::aa::port::PPort_ServiceManagement> m_PPort_ServiceManagement;
    
    /// @brief Instance of Port {ServiceCreator.PPort_SmartFilmCont}
    std::shared_ptr<servicecreator::aa::port::PPort_SmartFilmCont> m_PPort_SmartFilmCont;
    
    /// @brief Instance of Port {ServiceCreator.PPort_Snsr_FaceDetectModule}
    std::shared_ptr<servicecreator::aa::port::PPort_Snsr_FaceDetectModule> m_PPort_Snsr_FaceDetectModule;
    
    /// @brief Instance of Port {ServiceCreator.PPort_Snsr_HeartBeat}
    std::shared_ptr<servicecreator::aa::port::PPort_Snsr_HeartBeat> m_PPort_Snsr_HeartBeat;
    
    /// @brief Instance of Port {ServiceCreator.PPort_Snsr_USS}
    std::shared_ptr<servicecreator::aa::port::PPort_Snsr_USS> m_PPort_Snsr_USS;
    
    /// @brief Instance of Port {ServiceCreator.PPort_TMS_AC}
    std::shared_ptr<servicecreator::aa::port::PPort_TMS_AC> m_PPort_TMS_AC;
    
    /// @brief Instance of Port {ServiceCreator.PPort_TMS_EnvMonitor}
    std::shared_ptr<servicecreator::aa::port::PPort_TMS_EnvMonitor> m_PPort_TMS_EnvMonitor;
    
    /// @brief Instance of Port {ServiceCreator.PPort_TMS_Fragrance}
    std::shared_ptr<servicecreator::aa::port::PPort_TMS_Fragrance> m_PPort_TMS_Fragrance;
    
    /// @brief Instance of Port {ServiceCreator.PPort_TMS_Purifier}
    std::shared_ptr<servicecreator::aa::port::PPort_TMS_Purifier> m_PPort_TMS_Purifier;
    
    /// @brief Instance of Port {ServiceCreator.PPort_TMS_Ventilation}
    std::shared_ptr<servicecreator::aa::port::PPort_TMS_Ventilation> m_PPort_TMS_Ventilation;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_AccrPedal}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_AccrPedal> m_PPort_VCS_AccrPedal;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_Brake}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_Brake> m_PPort_VCS_Brake;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_BrakePedal}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_BrakePedal> m_PPort_VCS_BrakePedal;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_EPB}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_EPB> m_PPort_VCS_EPB;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_Gear}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_Gear> m_PPort_VCS_Gear;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_VehSpd}
    std::shared_ptr<servicecreator::aa::port::PPort_VCS_VehSpd> m_PPort_VCS_VehSpd;
    
    /// @brief Instance of Port {ServiceCreator.RPort_BCM_Horn}
    std::shared_ptr<servicecreator::aa::port::RPort_BCM_Horn> m_RPort_BCM_Horn;
    
    /// @brief Instance of Port {ServiceCreator.RPort_BCM_WiperWash}
    std::shared_ptr<servicecreator::aa::port::RPort_BCM_WiperWash> m_RPort_BCM_WiperWash;
    
    /// @brief Instance of Port {ServiceCreator.RPort_Ctrl_MoodLamp}
    std::shared_ptr<servicecreator::aa::port::RPort_Ctrl_MoodLamp> m_RPort_Ctrl_MoodLamp;
    
    /// @brief Instance of Port {ServiceCreator.RPort_Ctrl_RearCurtain}
    std::shared_ptr<servicecreator::aa::port::RPort_Ctrl_RearCurtain> m_RPort_Ctrl_RearCurtain;
    
    /// @brief Instance of Port {ServiceCreator.RPort_EevpControlSoaMlm}
    std::shared_ptr<servicecreator::aa::port::RPort_EevpControlSoaMlm> m_RPort_EevpControlSoaMlm;
    
    /// @brief Instance of Port {ServiceCreator.RPort_SmartFilmCont}
    std::shared_ptr<servicecreator::aa::port::RPort_SmartFilmCont> m_RPort_SmartFilmCont;
    
    /// @brief Instance of Port {ServiceCreator.RPort_Snsr_FaceDetectModule}
    std::shared_ptr<servicecreator::aa::port::RPort_Snsr_FaceDetectModule> m_RPort_Snsr_FaceDetectModule;
    
    /// @brief Instance of Port {ServiceCreator.RPort_TMS_AC}
    std::shared_ptr<servicecreator::aa::port::RPort_TMS_AC> m_RPort_TMS_AC;
    
    /// @brief Instance of Port {ServiceCreator.RPort_TMS_EnvMonitor}
    std::shared_ptr<servicecreator::aa::port::RPort_TMS_EnvMonitor> m_RPort_TMS_EnvMonitor;
    
    /// @brief Instance of Port {ServiceCreator.RPort_TMS_Fragrance}
    std::shared_ptr<servicecreator::aa::port::RPort_TMS_Fragrance> m_RPort_TMS_Fragrance;
    
    /// @brief Instance of Port {ServiceCreator.RPort_TMS_Purifier}
    std::shared_ptr<servicecreator::aa::port::RPort_TMS_Purifier> m_RPort_TMS_Purifier;
    
    /// @brief Instance of Port {ServiceCreator.RPort_TMS_Ventilation}
    std::shared_ptr<servicecreator::aa::port::RPort_TMS_Ventilation> m_RPort_TMS_Ventilation;
    
    /// @brief Instance of Port {ServiceCreator.RPort_VCS_Brake}
    std::shared_ptr<servicecreator::aa::port::RPort_VCS_Brake> m_RPort_VCS_Brake;
    
    /// @brief Instance of Port {ServiceCreator.RPort_VCS_Gear}
    std::shared_ptr<servicecreator::aa::port::RPort_VCS_Gear> m_RPort_VCS_Gear;
    
    /// @brief Instance of Port {ServiceCreator.RPort_VCS_TqDmd}
    std::shared_ptr<servicecreator::aa::port::RPort_VCS_TqDmd> m_RPort_VCS_TqDmd;
};
 
} /// namespace aa
} /// namespace servicecreator
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H